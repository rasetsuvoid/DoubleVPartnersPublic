// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221121000321_FourMigration")]
    partial class FourMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.DocumentTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("documenTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 20, 19, 3, 21, 628, DateTimeKind.Local).AddTicks(3624),
                            IsDeleted = false,
                            Name = "registro civil de nacimiento"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 20, 19, 3, 21, 628, DateTimeKind.Local).AddTicks(3627),
                            IsDeleted = false,
                            Name = "cédula de ciudadanía"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 20, 19, 3, 21, 628, DateTimeKind.Local).AddTicks(3628),
                            IsDeleted = false,
                            Name = "registro civil de nacimiento"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 20, 19, 3, 21, 628, DateTimeKind.Local).AddTicks(3630),
                            IsDeleted = false,
                            Name = "tarjeta de identidad"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 20, 19, 3, 21, 628, DateTimeKind.Local).AddTicks(3631),
                            IsDeleted = false,
                            Name = "tarjeta de extranjería"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 20, 19, 3, 21, 628, DateTimeKind.Local).AddTicks(3633),
                            IsDeleted = false,
                            Name = "cédula de extranjer"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 20, 19, 3, 21, 628, DateTimeKind.Local).AddTicks(3634),
                            IsDeleted = false,
                            Name = "NIT"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 20, 19, 3, 21, 628, DateTimeKind.Local).AddTicks(3635),
                            IsDeleted = false,
                            Name = "Pasaporte"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 20, 19, 3, 21, 628, DateTimeKind.Local).AddTicks(3637),
                            IsDeleted = false,
                            Name = "tipo de documento extranjero"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeByDocumentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Domain.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Entities.Person", b =>
                {
                    b.HasOne("Domain.Entities.DocumentTypes", "DocumenTypes")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumenTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
